# TypeScript Code Quality Manual Test Workflow
#
# Purpose:
# This workflow allows manual testing of the action against TypeScript code files.
# It scans all files (not just changed ones) and is useful for:
# - Testing the action manually
# - Debugging issues
# - Demonstrating functionality
# - Running quality checks on any branch

name: TypeScript Code Quality Manual Test

on:
  workflow_dispatch:
    inputs:
      fail_on_issues:
        description: 'Fail workflow if quality issues are found'
        required: false
        default: 'false'
        type: boolean

jobs:
  code-quality-manual-test:
    name: Manual Test on TypeScript Files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      # Run the action against all TypeScript test files
      - name: Run action on all TypeScript test files
        id: code-scan
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          sourcePath: "language-tests/typescript/files/"
          installTypeScriptPlugins: true
          check-name: "TypeScript Manual Quality Check"
          
          # Manual test settings - scan all files, don't fail by default
          scanChangedFilesOnly: false                  # Scan all files (no PR context)
          failOnQualityIssues: ${{ github.event.inputs.fail_on_issues }}
          
          # Relaxed thresholds for manual testing
          maxCriticalViolations: 50
          maxMediumViolations: 100
          
          file-types-config: |
            [
              {
                "name": "TypeScript",
                "sourcePath": "language-tests/typescript/files/src/",
                "fileExtensions": [".ts"],
                "analyzer": "eslint",
                "rulesPaths": [
                  "./language-tests/typescript/rulesets/eslint/standard-ruleset.js"
                ]
              },
              {
                "name": "TypeScript React",
                "sourcePath": "language-tests/typescript/files/components/",
                "fileExtensions": [".tsx"],
                "analyzer": "eslint",
                "rulesPaths": [
                  "./language-tests/typescript/rulesets/eslint/standard-ruleset.js"
                ]
              }
            ]

      # Show results summary
      - name: Show results summary
        run: |
          echo "Total violations: ${{ steps.code-scan.outputs.total-violations }}"
          echo "Critical violations: ${{ steps.code-scan.outputs.critical-violations }}"
          echo "Medium violations: ${{ steps.code-scan.outputs.medium-violations }}"
          echo "Action required: ${{ steps.code-scan.outputs.action-required }}"
